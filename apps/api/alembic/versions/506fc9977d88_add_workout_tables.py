"""Add workout tables

Revision ID: 506fc9977d88
Revises: ca516f638c62
Create Date: 2025-01-12 02:08:49.319607

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '506fc9977d88'
down_revision: Union[str, None] = 'ca516f638c62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workout_templates',
    sa.Column('template_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('difficulty', sa.String(), nullable=False),
    sa.Column('exercises', sa.JSON(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default='now()', nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default='now()', nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_table('workout_logs',
    sa.Column('log_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('exercises', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default='now()', nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default='now()', nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['workout_templates.template_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    
    # Add password column as nullable first
    op.add_column('users', sa.Column('password', sa.String(), nullable=True))
    
    # Copy data from hashed_password to password
    op.execute('UPDATE users SET password = hashed_password')
    
    # Make password column non-nullable
    op.alter_column('users', 'password', nullable=False)
    
    # Drop hashed_password column
    op.drop_column('users', 'hashed_password')
    
    # Other user table changes
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add hashed_password column as nullable first
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), nullable=True))
    
    # Copy data from password to hashed_password
    op.execute('UPDATE users SET hashed_password = password')
    
    # Make hashed_password column non-nullable
    op.alter_column('users', 'hashed_password', nullable=False)
    
    # Drop password column
    op.drop_column('users', 'password')
    
    # Other user table changes
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    op.drop_table('workout_logs')
    op.drop_table('workout_templates')
    # ### end Alembic commands ###
